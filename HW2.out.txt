-- Created by Nila Niroula

--2 To create table named countries
postgres=# CREATE TABLE countries(name VARCHAR(20), latitude VARCHAR(10), longitude VARCHAR(10), area INT, population INT, gdp INT, gdpYear INT);
CREATE TABLE

--4a To create a table named Borders
postgres=# CREATE TABLE Borders(listedCountries VARCHAR(20), borderCountries VARCHAR(20));
CREATE TABLE


--4b To populate both tables with the information for given countries

-- to enter data into table countries                                            
postgres=# insert into countries values('Germany', '51 00 N', '09 00 E', 357022, 80594017, 398, 2016);
INSERT 0 1

-- To check if the value entered above is correct
postgres=# select* from countries;
  name   | latitude | longitude |  area  | population | gdp | gdpyear
---------+----------+-----------+--------+------------+-----+---------
 Germany | 51 00 N  | 09 00 E   | 357022 |   80594017 | 398 |    2016
(1 row)

-- To enter more values in the table and check entries for correctness
postgres=# insert into countries values('Belgium', '50 50 N', '04 00 E', 30528, 11491346, 509, 2016);
INSERT 0 1
postgres=# select* from countries;
  name   | latitude | longitude |  area  | population | gdp | gdpyear
---------+----------+-----------+--------+------------+-----+---------
 Germany | 51 00 N  | 09 00 E   | 357022 |   80594017 | 398 |    2016
 Belgium | 50 50 N  | 04 00 E   |  30528 |   11491346 | 509 |    2016
(2 rows)

postgres=# insert into countries values('Luxembourg', '49 45 N', '06 10 E', 2586, 594130, 59, 2016);
INSERT 0 1
postgres=# select* from countries;
    name    | latitude | longitude |  area  | population | gdp | gdpyear
------------+----------+-----------+--------+------------+-----+---------
 Germany    | 51 00 N  | 09 00 E   | 357022 |   80594017 | 398 |    2016
 Belgium    | 50 50 N  | 04 00 E   |  30528 |   11491346 | 509 |    2016
 Luxembourg | 49 45 N  | 06 10 E   |   2586 |     594130 |  59 |    2016
(3 rows)

postgres=# insert into countries values('Netherlands', '52 30 N', '05 45 E', 41543, 17084719, 871, 2016);
INSERT 0 1       
postgres=# insert into countries values('Poland', '52 00 N', '20 00 E', 312685, 38476269, 1052, 2016);
INSERT 0 1
postgres=# select* from countries;
    name     | latitude | longitude |  area  | population | gdp  | gdpyear
-------------+----------+-----------+--------+------------+------+---------
 Germany     | 51 00 N  | 09 00 E   | 357022 |   80594017 |  398 |    2016
 Belgium     | 50 50 N  | 04 00 E   |  30528 |   11491346 |  509 |    2016
 Luxembourg  | 49 45 N  | 06 10 E   |   2586 |     594130 |   59 |    2016
 Netherlands | 52 30 N  | 05 45 E   |  41543 |   17084719 |  871 |    2016
 Poland      | 52 00 N  | 20 00 E   | 312685 |   38476269 | 1052 |    2016
(5 rows)

postgres=# insert into countries values('Czechia', '49 45 N', '15 30 E', 78869, 10674723, 350, 2016);
INSERT 0 1
postgres=# select* from countries;
    name     | latitude | longitude |  area  | population | gdp  | gdpyear
-------------+----------+-----------+--------+------------+------+---------
 Germany     | 51 00 N  | 09 00 E   | 357022 |   80594017 |  398 |    2016
 Belgium     | 50 50 N  | 04 00 E   |  30528 |   11491346 |  509 |    2016
 Luxembourg  | 49 45 N  | 06 10 E   |   2586 |     594130 |   59 |    2016
 Netherlands | 52 30 N  | 05 45 E   |  41543 |   17084719 |  871 |    2016
 Poland      | 52 00 N  | 20 00 E   | 312685 |   38476269 | 1052 |    2016
 Czechia     | 49 45 N  | 15 30 E   |  78869 |   10674723 |  350 |    2016
(6 rows)

postgres=# insert into countries values('Austria', '47 20 N', '13 20 E', 83871, 8754413, 417, 2016);
INSERT 0 1
postgres=# select* from countries;
    name     | latitude | longitude |  area  | population | gdp  | gdpyear
-------------+----------+-----------+--------+------------+------+---------
 Germany     | 51 00 N  | 09 00 E   | 357022 |   80594017 |  398 |    2016
 Belgium     | 50 50 N  | 04 00 E   |  30528 |   11491346 |  509 |    2016
 Luxembourg  | 49 45 N  | 06 10 E   |   2586 |     594130 |   59 |    2016
 Netherlands | 52 30 N  | 05 45 E   |  41543 |   17084719 |  871 |    2016
 Poland      | 52 00 N  | 20 00 E   | 312685 |   38476269 | 1052 |    2016
 Czechia     | 49 45 N  | 15 30 E   |  78869 |   10674723 |  350 |    2016
 Austria     | 47 20 N  | 13 20 E   |  83871 |    8754413 |  417 |    2016
(7 rows)

postgres=# insert into countries values('Switzerland', '47 00 N', '08 00 E', 41277, 8236303, 496, 2016);
INSERT 0 1
postgres=# select* from countries;
    name     | latitude | longitude |  area  | population | gdp  | gdpyear
-------------+----------+-----------+--------+------------+------+---------
 Germany     | 51 00 N  | 09 00 E   | 357022 |   80594017 |  398 |    2016
 Belgium     | 50 50 N  | 04 00 E   |  30528 |   11491346 |  509 |    2016
 Luxembourg  | 49 45 N  | 06 10 E   |   2586 |     594130 |   59 |    2016
 Netherlands | 52 30 N  | 05 45 E   |  41543 |   17084719 |  871 |    2016
 Poland      | 52 00 N  | 20 00 E   | 312685 |   38476269 | 1052 |    2016
 Czechia     | 49 45 N  | 15 30 E   |  78869 |   10674723 |  350 |    2016
 Austria     | 47 20 N  | 13 20 E   |  83871 |    8754413 |  417 |    2016
 Switzerland | 47 00 N  | 08 00 E   |  41277 |    8236303 |  496 |    2016
(8 rows)
     
postgres=# insert into countries values('France', '46 00 N', '02 00 E', 643801, 67106161, 270, 2016);
INSERT 0 1

-- To enter data into Borders and check if they are right
postgres=# insert into Borders values('Germany', 'Netherlands');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
(1 row)
postgres=# insert into Borders values('Germany', 'Belgium');
INSERT 0 1
postgres=# insert into Borders values('Germany', 'Luxembourg');
INSERT 0 1
postgres=# insert into Borders values('Germany', 'Poland');
INSERT 0 1
postgres=# insert into Borders values('Germany', 'France');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
(5 rows)
postgres=# insert into Borders values('Germany', 'Austria');
INSERT 0 1
postgres=# insert into Borders values('Germany', 'Czechia');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
(7 rows)
postgres=# insert into Borders values('Germany', 'Denmark');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
 Germany         | Denmark
(8 rows)

postgres=# insert into Borders values('Germany', 'Switzerland');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
 Germany         | Denmark
 Germany         | Switzerland
(9 rows)
postgres=# insert into Borders values('Luxembourg', 'Germany');
INSERT 0 1
postgres=# insert into Borders values('Poland', 'Germany');
INSERT 0 1
postgres=# insert into Borders values('Czechia', 'Germany');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
 Germany         | Denmark
 Germany         | Switzerland
 Luxembourg      | Germany
 Poland          | Germany
 Czechia         | Germany
(12 rows)
postgres=# insert into Borders values('Austria', 'Germany');
INSERT 0 1
postgres=# insert into Borders values('Switzerland', 'Germany');
INSERT 0 1
postgres=# insert into Borders values('Belgium', 'Germany');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
 Germany         | Denmark
 Germany         | Switzerland
 Luxembourg      | Germany
 Poland          | Germany
 Czechia         | Germany
 Austria         | Germany
 Switzerland     | Germany
 Belgium         | Germany
(15 rows)

postgres=# insert into Borders values('Netherlands','Germany');
INSERT 0 1
postgres=# insert into Borders values('Denmark', 'Germany');
INSERT 0 1
postgres=# insert into Borders values('France', 'Germany');
INSERT 0 1
postgres=# select* from Borders;
 listedcountries | bordercountries
-----------------+-----------------
 Germany         | Netherlands
 Germany         | Belgium
 Germany         | Luxembourg
 Germany         | Poland
 Germany         | France
 Germany         | Austria
 Germany         | Czechia
 Germany         | Denmark
 Germany         | Switzerland
 Luxembourg      | Germany
 Poland          | Germany
 Czechia         | Germany
 Austria         | Germany
 Switzerland     | Germany
 Belgium         | Germany
 Netherlands     | Germany
 Denmark         | Germany
 France          | Germany
(18 rows)

 --4c To use query to display all countries that border Germany                                   
postgres=# select bordercountries from Borders where listedcountries = 'Germany';
 bordercountries
-----------------
 Netherlands
 Belgium
 Luxembourg
 Poland
 France
 Austria
 Czechia
 Denmark
 Switzerland
(9 rows)

--4d To use query to display all countries that have a population greater than 100 million
postgres=# select countries.name from countries where population > 100000000;
 name
------
(0 rows)

--4e To use query to display all countries that have a population greater than 100 million and border Germany
postgres=# select countries.name , Borders.bordercountries from countries, Borders where countries.population > 100000000 and Borders.listedcountries = 'Germany';
 name | bordercountries
------+-----------------
(0 rows)


   